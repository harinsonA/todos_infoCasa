{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\harri\\\\Documents\\\\Curso Desarrollo Web\\\\Proyectos\\\\infoCasa\\\\components\\\\Tasks.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Router from \"next/router\";\nimport { deleteTask, putTodo } from \"../store/actions/todoAction\";\nimport { useDispatch } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\n\nvar Tasks = function Tasks(_ref) {\n  _s();\n\n  var tasks = _ref.tasks;\n\n  var _useState = useState([]),\n      taskList = _useState[0],\n      setTaskList = _useState[1];\n\n  var _useState2 = useState(false),\n      stateOreder = _useState2[0],\n      setStateOrder = _useState2[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    console.log(\"r\");\n\n    if (tasks.length) {\n      var newOrder = tasks.sort(function (a, b) {\n        return stateOreder ? Number(b.completed) - Number(a.completed) : Number(a.completed) - Number(b.completed);\n      });\n      setTaskList(newOrder);\n    }\n  }, [tasks, stateOreder]);\n\n  var handleClick = function handleClick(event, id) {\n    event.preventDefault();\n\n    if (document.getElementById(id)) {\n      dispatch(deleteTask(id));\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    event.preventDefault();\n    var newTasks = tasks.filter(function (_ref2) {\n      var title = _ref2.title;\n      return title.includes(event.target.value);\n    });\n    setTaskList(newTasks);\n  };\n\n  var handleCheck = function handleCheck(event, task) {\n    var newobject = {\n      userId: task.userId,\n      id: task.id,\n      title: task.title,\n      completed: event.target.checked\n    };\n    dispatch(putTodo(newobject));\n  };\n\n  var handleOrder = function handleOrder(event) {\n    var bool = event.target.value == \"true\";\n    console.log(bool);\n\n    if (bool) {\n      setStateOrder(bool);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"row m-2 sticky-top bg-light d-flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    className: \"col-7\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Search:\", __jsx(\"input\", {\n    placeholder: \"Search a task\",\n    className: \"form-control \",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: \"col-5 d-flex justify-content-center align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    className: \"mr-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Order by: \"), __jsx(\"select\", {\n    onChange: function onChange(e) {\n      return handleOrder(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, __jsx(\"option\", {\n    value: \"false\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Task Incomplete\"), __jsx(\"option\", {\n    value: \"true\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Task Complete\")))), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, taskList.map(function (task, i) {\n    return __jsx(\"li\", {\n      key: i,\n      id: task.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, __jsx(\"button\", {\n      onClick: function onClick(e) {\n        return handleClick(e, task.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, __jsx(\"i\", {\n      className: \"fas fa-trash-alt\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    })), __jsx(\"label\", {\n      name: task.id,\n      onClick: function onClick(e) {\n        e.preventDefault();\n        Router.push(\"/tasks/[id]\", \"/tasks/\".concat(task.id));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, task.title), __jsx(\"input\", {\n      type: \"checkbox\",\n      checked: task.completed,\n      onChange: function onChange(e) {\n        return handleCheck(e, task);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }));\n  })));\n};\n\n_s(Tasks, \"Yzzrd850BolfMGVIlEMev2+lz6o=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["C:/Users/harri/Documents/Curso Desarrollo Web/Proyectos/infoCasa/components/Tasks.js"],"names":["Router","deleteTask","putTodo","useDispatch","useState","useEffect","Tasks","tasks","taskList","setTaskList","stateOreder","setStateOrder","dispatch","console","log","length","newOrder","sort","a","b","Number","completed","handleClick","event","id","preventDefault","document","getElementById","handleChange","newTasks","filter","title","includes","target","value","handleCheck","task","newobject","userId","checked","handleOrder","bool","e","map","i","push"],"mappings":"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","sourcesContent":["import Router from \"next/router\";\r\nimport { deleteTask, putTodo } from \"../store/actions/todoAction\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\nconst Tasks = ({ tasks }) => {\r\n  const [taskList, setTaskList] = useState([]);\r\n  const [stateOreder, setStateOrder] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    console.log(\"r\");\r\n    if (tasks.length) {\r\n      const newOrder = tasks.sort((a, b) => {\r\n        return stateOreder\r\n          ? Number(b.completed) - Number(a.completed)\r\n          : Number(a.completed) - Number(b.completed);\r\n      });\r\n      setTaskList(newOrder);\r\n    }\r\n  }, [tasks, stateOreder]);\r\n\r\n  const handleClick = (event, id) => {\r\n    event.preventDefault();\r\n    if (document.getElementById(id)) {\r\n      dispatch(deleteTask(id));\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    event.preventDefault();\r\n    const newTasks = tasks.filter(({ title }) => {\r\n      return title.includes(event.target.value);\r\n    });\r\n    setTaskList(newTasks);\r\n  };\r\n\r\n  const handleCheck = (event, task) => {\r\n    const newobject = {\r\n      userId: task.userId,\r\n      id: task.id,\r\n      title: task.title,\r\n      completed: event.target.checked,\r\n    };\r\n    dispatch(putTodo(newobject));\r\n  };\r\n\r\n  const handleOrder = (event) => {\r\n    const bool = event.target.value == \"true\";\r\n    console.log(bool);\r\n    if (bool) {\r\n      setStateOrder(bool);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row m-2 sticky-top bg-light d-flex\">\r\n        <label className=\"col-7\">\r\n          Search:\r\n          <input\r\n            placeholder=\"Search a task\"\r\n            className=\"form-control \"\r\n            onChange={(e) => handleChange(e)}\r\n          ></input>\r\n        </label>\r\n        <div className=\"col-5 d-flex justify-content-center align-items-center\">\r\n          <label className=\"mr-2\">Order by: </label>\r\n          <select onChange={(e) => handleOrder(e)}>\r\n            <option value=\"false\">Task Incomplete</option>\r\n            <option value=\"true\">Task Complete</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <ul>\r\n        {taskList.map((task, i) => (\r\n          <li key={i} id={task.id}>\r\n            <button onClick={(e) => handleClick(e, task.id)}>\r\n              <i className=\"fas fa-trash-alt\"></i>\r\n            </button>\r\n            <label\r\n              name={task.id}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                Router.push(\"/tasks/[id]\", `/tasks/${task.id}`);\r\n              }}\r\n            >\r\n              {task.title}\r\n            </label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={task.completed}\r\n              onChange={(e) => handleCheck(e, task)}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n"]},"metadata":{},"sourceType":"module"}