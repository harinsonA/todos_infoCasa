{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\harri\\\\Documents\\\\Curso Desarrollo Web\\\\Proyectos\\\\infoCasa\\\\store\\\\appContext.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport getState from './flux';\nexport var Context = React.createContext(null);\n\nvar injectContext = function injectContext(PassedComponent) {\n  var StoreWrapper = /*#__PURE__*/function (_Component) {\n    _inherits(StoreWrapper, _Component);\n\n    var _super = _createSuper(StoreWrapper);\n\n    function StoreWrapper(props) {\n      var _this;\n\n      _classCallCheck(this, StoreWrapper);\n\n      _this = _super.call(this, props);\n      _this.state = getState({\n        getStore: function getStore() {\n          return _this.state.store;\n        },\n        getActions: function getActions() {\n          return _this.state.actions;\n        },\n        setStore: function setStore(updateStore) {\n          return _this.setState({\n            store: Object.assign(_this.state.store, updateStore),\n            actions: _objectSpread({}, _this.state.acttions)\n          });\n        }\n      });\n      return _this;\n    }\n\n    _createClass(StoreWrapper, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.state.actions.getTasks('https://jsonplaceholder.typicode.com/todos');\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return __jsx(Context.Provider, {\n          value: this.state,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }\n        }, __jsx(PassedComponent, _extends({}, this.props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }\n        })));\n      }\n    }]);\n\n    return StoreWrapper;\n  }(Component);\n\n  return StoreWrapper;\n};\n\nexport default injectContext;","map":{"version":3,"sources":["C:/Users/harri/Documents/Curso Desarrollo Web/Proyectos/infoCasa/store/appContext.jsx"],"names":["React","Component","getState","Context","createContext","injectContext","PassedComponent","StoreWrapper","props","state","getStore","store","getActions","actions","setStore","updateStore","setState","Object","assign","acttions","getTasks"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,QAArB;AACA,OAAO,IAAMC,OAAO,GAAGH,KAAK,CAACI,aAAN,CAAoB,IAApB,CAAhB;;AAEP,IAAMC,aAAa,GAAE,SAAfA,aAAe,CAAAC,eAAe,EAAG;AAAA,MAC7BC,YAD6B;AAAA;;AAAA;;AAE/B,0BAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,gCAAMA,KAAN;AACA,YAAKC,KAAL,GAAYP,QAAQ,CAAC;AACjBQ,QAAAA,QAAQ,EAAC;AAAA,iBAAI,MAAKD,KAAL,CAAWE,KAAf;AAAA,SADQ;AAEjBC,QAAAA,UAAU,EAAC;AAAA,iBAAK,MAAKH,KAAL,CAAWI,OAAhB;AAAA,SAFM;AAGjBC,QAAAA,QAAQ,EAAE,kBAAAC,WAAW;AAAA,iBAAG,MAAKC,QAAL,CAAc;AAClCL,YAAAA,KAAK,EAACM,MAAM,CAACC,MAAP,CAAc,MAAKT,KAAL,CAAWE,KAAzB,EAA+BI,WAA/B,CAD4B;AAElCF,YAAAA,OAAO,oBAAK,MAAKJ,KAAL,CAAWU,QAAhB;AAF2B,WAAd,CAAH;AAAA;AAHJ,OAAD,CAApB;AAFc;AAUjB;;AAZ8B;AAAA;AAAA,0CAaZ;AACf,aAAKV,KAAL,CAAWI,OAAX,CAAmBO,QAAnB,CAA4B,4CAA5B;AAEH;AAhB8B;AAAA;AAAA,+BAiBvB;AACJ,eACI,MAAC,OAAD,CAAS,QAAT;AAAkB,UAAA,KAAK,EAAE,KAAKX,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,eAAD,eAAqB,KAAKD,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,CADJ;AAKH;AAvB8B;;AAAA;AAAA,IACRP,SADQ;;AAyBnC,SAAOM,YAAP;AACH,CA1BD;;AA2BA,eAAeF,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport getState from './flux';\r\nexport const Context = React.createContext(null);\r\n\r\nconst injectContext= PassedComponent =>{\r\n    class StoreWrapper extends Component{\r\n        constructor(props){\r\n            super(props);\r\n            this.state =getState({\r\n                getStore:()=>this.state.store,\r\n                getActions:()=> this.state.actions,\r\n                setStore: updateStore=> this.setState({\r\n                    store:Object.assign(this.state.store,updateStore),\r\n                    actions:{...this.state.acttions}\r\n                })\r\n            })\r\n        }\r\n        componentDidMount(){\r\n            this.state.actions.getTasks('https://jsonplaceholder.typicode.com/todos');\r\n\r\n        }\r\n        render(){\r\n            return(\r\n                <Context.Provider value={this.state}>\r\n                    <PassedComponent {...this.props}/>\r\n                </Context.Provider>\r\n            )\r\n        }\r\n    }\r\n    return StoreWrapper;\r\n}\r\nexport default injectContext;"]},"metadata":{},"sourceType":"module"}