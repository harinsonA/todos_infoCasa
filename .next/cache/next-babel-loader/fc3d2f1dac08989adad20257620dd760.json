{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as types from \"../types\";\nvar initialState = {\n  todos: [],\n  todo: {},\n  loading: false,\n  error: null\n};\nexport var todoReducer = function todoReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.SET_TODOS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        todos: action.payload,\n        loading: false,\n        error: null\n      });\n\n    case types.POST_TODO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        todos: [].concat(_toConsumableArray(state.todos), [action.payload]),\n        loading: false,\n        error: null\n      });\n\n    case types.PUT_TODO:\n      var _todos = _toConsumableArray(state.todos);\n\n      var index = _todos.findIndex(function (element) {\n        return element.id == action.payload.id;\n      });\n\n      if (index !== -1) {\n        _todos[index] = action.payload;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          todos: [].concat(_toConsumableArray(state.todos), [action.payload]),\n          loading: false,\n          error: null\n        });\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/harri/Documents/Curso Desarrollo Web/Proyectos/infoCasa/store/reducers/todoReducer.js"],"names":["types","initialState","todos","todo","loading","error","todoReducer","state","action","type","SET_TODOS","payload","POST_TODO","PUT_TODO","_todos","index","findIndex","element","id"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,UAAvB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,OAAO,EAAE,KAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,KAAK,CAACU,SAAX;AACE,6CACKH,KADL;AAEEL,QAAAA,KAAK,EAAEM,MAAM,CAACG,OAFhB;AAGEP,QAAAA,OAAO,EAAE,KAHX;AAIEC,QAAAA,KAAK,EAAE;AAJT;;AAMF,SAAKL,KAAK,CAACY,SAAX;AACE,6CACKL,KADL;AAEEL,QAAAA,KAAK,+BAAMK,KAAK,CAACL,KAAZ,IAAmBM,MAAM,CAACG,OAA1B,EAFP;AAGEP,QAAAA,OAAO,EAAE,KAHX;AAIEC,QAAAA,KAAK,EAAE;AAJT;;AAMF,SAAKL,KAAK,CAACa,QAAX;AAEE,UAAMC,MAAM,sBAAOP,KAAK,CAACL,KAAb,CAAZ;;AACA,UAAMa,KAAK,GAAGD,MAAM,CAACE,SAAP,CACZ,UAACC,OAAD;AAAA,eAAaA,OAAO,CAACC,EAAR,IAAcV,MAAM,CAACG,OAAP,CAAeO,EAA1C;AAAA,OADY,CAAd;;AAIA,UAAIH,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBD,QAAAA,MAAM,CAACC,KAAD,CAAN,GAAgBP,MAAM,CAACG,OAAvB;AAEA,+CACKJ,KADL;AAEEL,UAAAA,KAAK,+BAAMK,KAAK,CAACL,KAAZ,IAAmBM,MAAM,CAACG,OAA1B,EAFP;AAGEP,UAAAA,OAAO,EAAE,KAHX;AAIEC,UAAAA,KAAK,EAAE;AAJT;AAMD;;AAEH;AACE,aAAOE,KAAP;AAlCJ;AAoCD,CArCM","sourcesContent":["import * as types from \"../types\";\r\n\r\nconst initialState = {\r\n  todos: [],\r\n  todo: {},\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const todoReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.SET_TODOS:\r\n      return {\r\n        ...state,\r\n        todos: action.payload,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case types.POST_TODO:\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos, action.payload],\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case types.PUT_TODO:\r\n      \r\n      const _todos = [...state.todos];\r\n      const index = _todos.findIndex(\r\n        (element) => element.id == action.payload.id\r\n      );\r\n\r\n      if (index !== -1) {\r\n        _todos[index] = action.payload;\r\n\r\n        return {\r\n          ...state,\r\n          todos: [...state.todos, action.payload],\r\n          loading: false,\r\n          error: null,\r\n        };\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}