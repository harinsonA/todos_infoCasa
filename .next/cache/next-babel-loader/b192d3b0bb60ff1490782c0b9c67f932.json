{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harri\\\\Documents\\\\Curso Desarrollo Web\\\\Proyectos\\\\infoCasa\\\\pages\\\\tasks\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport Container from \"../../components/Container\";\nimport { useState } from \"react\";\nimport { putTodo, getTask } from \"../../store/actions/todoAction\";\nimport { useDispatch } from \"react-redux\";\n\nconst Task = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  console.log(id);\n  console.log(_task);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getTask(id));\n  }, []);\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: update,\n    1: setUpdate\n  } = useState(true); // const handleSubmit = (event) => {\n  //   event.preventDefault();\n  //   const newTask = event.target.textarea.value;\n  //   console.log(newTask);\n  //   if (newTask && newTask.length != 0) {\n  //     const newobject = {\n  //       userId: _task.userId,\n  //       id: _task.id,\n  //       title: newTask,\n  //       completed: _task.completed,\n  //     };\n  //     dispatch(putTodo(newobject));\n  //   }\n  // };\n\n  const handleClickUpdate = event => {\n    event.preventDefault();\n    setVisible(true);\n    setUpdate(false);\n  };\n\n  const handleClickCancel = event => {\n    event.preventDefault();\n    setVisible(false);\n    setUpdate(true);\n  };\n\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"taskCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, __jsx(\"h5\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Task: #\"), __jsx(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Description: \", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 28\n    }\n  }))), __jsx(\"div\", {\n    className: \"card-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, __jsx(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"d-flex mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, update && __jsx(\"button\", {\n    id: \"update\",\n    type: \"button\",\n    className: \"btn btn-info\",\n    onClick: e => handleClickUpdate(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  }, \"Update\"), visible && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  }, __jsx(\"button\", {\n    id: \"save\",\n    type: \"submit\",\n    className: \"btn btn-success mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"Save\"), __jsx(\"button\", {\n    id: \"cancel\",\n    type: \"button\",\n    className: \"btn btn-danger\",\n    onClick: e => handleClickCancel(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Cancel\"))), visible && __jsx(\"textarea\", {\n    id: \"textarea\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }))))));\n}; // // Task.getInitialProps = (ctx) => {\n// //   const res =  getTask(\"ctx.query.id\")\n// //   const data =  res.json();\n// //   return { _task: data };\n// // };\n\n\nexport default Task;","map":{"version":3,"sources":["C:/Users/harri/Documents/Curso Desarrollo Web/Proyectos/infoCasa/pages/tasks/[id].js"],"names":["useRouter","Container","useState","putTodo","getTask","useDispatch","Task","router","id","query","console","log","_task","dispatch","useEffect","visible","setVisible","update","setUpdate","handleClickUpdate","event","preventDefault","handleClickCancel","e","handleSubmit"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport Container from \"../../components/Container\";\r\nimport { useState } from \"react\";\r\nimport { putTodo, getTask } from \"../../store/actions/todoAction\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Task = () => {\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n  console.log(id)\r\n  console.log(_task)\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getTask(id));\r\n  }, []);\r\n\r\n\r\n  const [visible, setVisible] = useState(false);\r\n  const [update, setUpdate] = useState(true);\r\n\r\n  // const handleSubmit = (event) => {\r\n  //   event.preventDefault();\r\n  //   const newTask = event.target.textarea.value;\r\n  //   console.log(newTask);\r\n  //   if (newTask && newTask.length != 0) {\r\n  //     const newobject = {\r\n  //       userId: _task.userId,\r\n  //       id: _task.id,\r\n  //       title: newTask,\r\n  //       completed: _task.completed,\r\n  //     };\r\n  //     dispatch(putTodo(newobject));\r\n  //   }\r\n  // };\r\n  const handleClickUpdate = (event) => {\r\n    event.preventDefault();\r\n    setVisible(true);\r\n    setUpdate(false);\r\n  };\r\n  const handleClickCancel = (event) => {\r\n    event.preventDefault();\r\n    setVisible(false);\r\n    setUpdate(true);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"taskCard\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">Task: #</h5>\r\n            <p className=\"card-text\">\r\n              Description: <br />\r\n               \r\n            </p>\r\n          </div>\r\n          <div className=\"card-footer\">\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n              <div className=\"d-flex mb-2\">\r\n                {update && (\r\n                  <button\r\n                    id=\"update\"\r\n                    type=\"button\"\r\n                    className=\"btn btn-info\"\r\n                    onClick={(e) => handleClickUpdate(e)}\r\n                  >\r\n                    Update\r\n                  </button>\r\n                )}\r\n                {visible && (\r\n                  <div>\r\n                    <button\r\n                      id=\"save\"\r\n                      type=\"submit\"\r\n                      className=\"btn btn-success mr-2\"\r\n                    >\r\n                      Save\r\n                    </button>\r\n                    <button\r\n                      id=\"cancel\"\r\n                      type=\"button\"\r\n                      className=\"btn btn-danger\"\r\n                      onClick={(e) => handleClickCancel(e)}\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {visible && (\r\n                <textarea id=\"textarea\" className=\"form-control\"></textarea>\r\n              )}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\n// // Task.getInitialProps = (ctx) => {\r\n// //   const res =  getTask(\"ctx.query.id\")\r\n\r\n// //   const data =  res.json();\r\n// //   return { _task: data };\r\n// // };\r\n\r\nexport default Task;\r\n"]},"metadata":{},"sourceType":"module"}