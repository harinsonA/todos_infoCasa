{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\harri\\\\Documents\\\\Curso Desarrollo Web\\\\Proyectos\\\\infoCasa\\\\components\\\\Tasks.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Router from \"next/router\";\n\nvar Tasks = function Tasks(_ref) {\n  var tasks = _ref.tasks;\n  return __jsx(React.Fragment, null, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }\n  }, tasks.map(function (task) {\n    return __jsx(\"li\", {\n      key: task.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 11\n      }\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      name: task.id,\n      id: task.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }\n    }), __jsx(\"label\", {\n      htmlFor: task.id,\n      onClick: function onClick(e) {\n        e.preventDefault();\n        Router.push(\"/tasks/[id]\", \"/tasks/\".concat(task.id));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }\n    }, task.title));\n  })));\n};\n\n_c = Tasks;\n\nTasks.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"https://jsonplaceholder.typicode.com/todos\");\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            data = _context.sent;\n            return _context.abrupt(\"return\", {\n              tasks: data\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["C:/Users/harri/Documents/Curso Desarrollo Web/Proyectos/infoCasa/components/Tasks.js"],"names":["Router","Tasks","tasks","map","task","id","e","preventDefault","push","title","getInitialProps","ctx","fetch","res","json","data"],"mappings":";;;;;;;;AAAA,OAAOA,MAAP,MAAmB,aAAnB;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAa;AAAA,MAAXC,KAAW,QAAXA,KAAW;AACzB,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD;AAAA,WACT;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAED,IAAI,CAACC,EAAlC;AAAsC,MAAA,EAAE,EAAED,IAAI,CAACC,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AACE,MAAA,OAAO,EAAED,IAAI,CAACC,EADhB;AAEE,MAAA,OAAO,EAAE,iBAACC,CAAD,EAAO;AACdA,QAAAA,CAAC,CAACC,cAAF;AACAP,QAAAA,MAAM,CAACQ,IAAP,CAAY,aAAZ,mBAAqCJ,IAAI,CAACC,EAA1C;AACD,OALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGD,IAAI,CAACK,KAPR,CAFF,CADS;AAAA,GAAV,CADH,CADF,CADF;AAoBD,CArBD;;KAAMR,K;;AAsBNA,KAAK,CAACS,eAAN;AAAA,uEAAwB,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJC,KAAK,CAAC,4CAAD,CADD;;AAAA;AAChBC,YAAAA,GADgB;AAAA;AAAA,mBAEHA,GAAG,CAACC,IAAJ,EAFG;;AAAA;AAEhBC,YAAAA,IAFgB;AAAA,6CAGf;AAAEb,cAAAA,KAAK,EAAEa;AAAT,aAHe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAed,KAAf","sourcesContent":["import Router from \"next/router\";\r\nconst Tasks = ({tasks}) => {\r\n  return (\r\n    <>\r\n      <ul>\r\n        {tasks.map((task) => (\r\n          <li key={task.id}>\r\n            <input type=\"checkbox\" name={task.id} id={task.id} />\r\n            <label\r\n              htmlFor={task.id}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                Router.push(\"/tasks/[id]\", `/tasks/${task.id}`);\r\n              }}\r\n            >\r\n              {task.title}\r\n            </label>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\nTasks.getInitialProps = async (ctx) => {\r\n  const res = await fetch(\"https://jsonplaceholder.typicode.com/todos\");\r\n  const data = await res.json();\r\n  return { tasks: data };\r\n};\r\n\r\nexport default Tasks;\r\n"]},"metadata":{},"sourceType":"module"}