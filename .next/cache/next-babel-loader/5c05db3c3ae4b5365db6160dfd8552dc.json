{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\harri\\\\Documents\\\\Curso Desarrollo Web\\\\Proyectos\\\\infoCasa\\\\components\\\\Tasks.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useContext } from 'react';\nimport { Context } from '../store/appContext';\nimport Router from \"next/router\";\n\nvar Tasks = function Tasks(props) {\n  _s();\n\n  var _useContext = useContext(Context),\n      store = _useContext.store,\n      actions = _useContext.actions;\n\n  return __jsx(React.Fragment, null, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, !!store.tasks ? store.tasks.map(function (task, i) {\n    return __jsx(\"li\", {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      name: task.id,\n      id: task.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }), __jsx(\"label\", {\n      htmlFor: task.id,\n      onClick: function onClick(e) {\n        e.preventDefault();\n        Router.push(\"/tasks/[id]\", \"/tasks/\".concat(task.id));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, task.title));\n  }) : __jsx(React.Fragment, null)));\n};\n\n_s(Tasks, \"ZYVjfDxsQQu0c0qprI7CWGC5n2o=\");\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["C:/Users/harri/Documents/Curso Desarrollo Web/Proyectos/infoCasa/components/Tasks.js"],"names":["React","useCallback","useContext","Context","Router","Tasks","props","store","actions","tasks","map","task","i","id","e","preventDefault","push","title"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,QAA+C,OAA/C;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AAAA;;AAAA,oBAEKJ,UAAU,CAACC,OAAD,CAFf;AAAA,MAEZI,KAFY,eAEZA,KAFY;AAAA,MAENC,OAFM,eAENA,OAFM;;AAIrB,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,CAAC,CAACD,KAAK,CAACE,KAAR,GACEF,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgB,UAACC,IAAD,EAAOC,CAAP,EAAW;AACzB,WACE;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAED,IAAI,CAACE,EAAlC;AAAsC,MAAA,EAAE,EAAEF,IAAI,CAACE,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA;AACE,MAAA,OAAO,EAAEF,IAAI,CAACE,EADhB;AAEE,MAAA,OAAO,EAAE,iBAACC,CAAD,EAAO;AACdA,QAAAA,CAAC,CAACC,cAAF;AACAX,QAAAA,MAAM,CAACY,IAAP,CAAY,aAAZ,mBAAqCL,IAAI,CAACE,EAA1C;AACD,OALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOEF,IAAI,CAACM,KAPP,CAFA,CADF;AAcD,GAfD,CADF,GAkBI,2BArBR,CADF,CADF;AAiCD,CArCD;;GAAMZ,K;;KAAAA,K;AAuCN,eAAeA,KAAf","sourcesContent":["import React, { useCallback, useContext } from 'react';\r\nimport { Context } from '../store/appContext';\r\nimport Router from \"next/router\";\r\nconst Tasks = props => {\r\n\r\n    const {store,actions} = useContext(Context);\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n\r\n        {\r\n          !!store.tasks?\r\n            store.tasks.map((task, i)=>{\r\n              return(\r\n                <li  key={i}>\r\n                <input type=\"checkbox\" name={task.id} id={task.id} />\r\n                <label\r\n                  htmlFor={task.id}\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    Router.push(\"/tasks/[id]\", `/tasks/${task.id}`);\r\n                  }}\r\n                >\r\n                 {task.title}\r\n                </label>\r\n              </li>\r\n              )\r\n            }):\r\n            (\r\n              <>\r\n              </>\r\n            )\r\n        }\r\n       \r\n         \r\n       \r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n"]},"metadata":{},"sourceType":"module"}