{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\harri\\\\Documents\\\\Curso Desarrollo Web\\\\Proyectos\\\\infoCasa\\\\pages\\\\tasks\\\\[id].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport Container from \"../../components/Container\";\n\nvar Task = function Task(_ref) {\n  _s();\n\n  var _task = _ref._task;\n  var router = useRouter();\n  var id = router.query.id;\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"taskCard\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"card\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"card-body\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }, __jsx(\"h5\", {\n    className: \"card-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, \"Task: #\", _task.id), __jsx(\"p\", {\n    className: \"card-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, \"Description: \", __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 28\n    }\n  }), _task.title)), __jsx(\"div\", {\n    className: \"card-footer text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#exampleModal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"Launch demo modal\")))));\n};\n\n_s(Task, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Task;\n\nTask.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"https://jsonplaceholder.typicode.com/todos/\".concat(ctx.query.id));\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            data = _context.sent;\n            return _context.abrupt(\"return\", {\n              _task: data\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["C:/Users/harri/Documents/Curso Desarrollo Web/Proyectos/infoCasa/pages/tasks/[id].js"],"names":["useRouter","Container","Task","_task","router","id","query","title","getInitialProps","ctx","fetch","res","json","data"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAe;AAAA;;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAC1B,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AAD0B,MAElBK,EAFkB,GAEXD,MAAM,CAACE,KAFI,CAElBD,EAFkB;AAI1B,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAmCF,KAAK,CAACE,EAAzC,CADF,EAEE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADf,EAEGF,KAAK,CAACI,KAFT,CAFF,CADF,EAQE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,mBAAY,OAHd;AAIE,mBAAY,eAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CARF,CADF,CADF,CADF;AAyBD,CA7BD;;GAAML,I;UACWF,S;;;KADXE,I;;AA+BNA,IAAI,CAACM,eAAL;AAAA,uEAAuB,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACHC,KAAK,sDACyBD,GAAG,CAACH,KAAJ,CAAUD,EADnC,EADF;;AAAA;AACfM,YAAAA,GADe;AAAA;AAAA,mBAIFA,GAAG,CAACC,IAAJ,EAJE;;AAAA;AAIfC,YAAAA,IAJe;AAAA,6CAKd;AAAEV,cAAAA,KAAK,EAAEU;AAAT,aALc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAQA,eAAeX,IAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport Container from \"../../components/Container\";\r\n\r\nconst Task = ({ _task }) => {\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"taskCard\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">Task: #{_task.id}</h5>\r\n            <p className=\"card-text\">\r\n              Description: <br />\r\n              {_task.title}\r\n            </p>\r\n          </div>\r\n          <div className=\"card-footer text-muted\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              data-toggle=\"modal\"\r\n              data-target=\"#exampleModal\"\r\n            >\r\n              Launch demo modal\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nTask.getInitialProps = async (ctx) => {\r\n  const res = await fetch(\r\n    `https://jsonplaceholder.typicode.com/todos/${ctx.query.id}`\r\n  );\r\n  const data = await res.json();\r\n  return { _task: data };\r\n};\r\n\r\nexport default Task;\r\n"]},"metadata":{},"sourceType":"module"}