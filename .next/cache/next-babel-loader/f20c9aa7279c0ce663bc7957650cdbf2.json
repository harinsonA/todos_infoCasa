{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as types from \"../types\";\nimport axios from \"axios\";\nexport var fetchTodos = function fetchTodos() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"https://jsonplaceholder.typicode.com/todos\");\n\n            case 2:\n              res = _context.sent;\n              dispatch({\n                type: types.SET_TODOS,\n                payload: res.data\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var postTodo = function postTodo(todo) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return axios.post(\"https://jsonplaceholder.typicode.com/todos\", {\n                data: todo\n              });\n\n            case 2:\n              res = _context2.sent;\n              dispatch({\n                type: types.POST_TODO,\n                payload: todo\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var putTodo = function putTodo(todo) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return axios.put(\"https://jsonplaceholder.typicode.com/todos/\".concat(todo.id), {\n                data: todo\n              });\n\n            case 2:\n              res = _context3.sent;\n              dispatch({\n                type: types.PUT_TODO,\n                payload: todo\n              });\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var getTask = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id) {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return axios.get(\"https://jsonplaceholder.typicode.com/todos/\".concat(id));\n\n          case 2:\n            res = _context4.sent;\n            return _context4.abrupt(\"return\", res.data);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function getTask(_x4) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var deleteTask = function deleteTask(id) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return axios[\"delete\"](\"https://jsonplaceholder.typicode.com/todos/\".concat(id), {\n                data: id\n              });\n\n            case 2:\n              res = _context5.sent;\n              console.log(res);\n              dispatch({\n                type: types.DELETE_TODO,\n                payload: id\n              });\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function (_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/harri/Documents/Curso Desarrollo Web/Proyectos/infoCasa/store/actions/todoAction.js"],"names":["types","axios","fetchTodos","dispatch","get","res","type","SET_TODOS","payload","data","postTodo","todo","post","POST_TODO","putTodo","put","id","PUT_TODO","getTask","deleteTask","console","log","DELETE_TODO"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,UAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA,wEAAM,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACZF,KAAK,CAACG,GAAN,CAAU,4CAAV,CADY;;AAAA;AACxBC,cAAAA,GADwB;AAE9BF,cAAAA,QAAQ,CAAC;AACPG,gBAAAA,IAAI,EAAEN,KAAK,CAACO,SADL;AAEPC,gBAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,eAAD,CAAR;;AAF8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAOP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD;AAAA;AAAA,yEAAU,kBAAOR,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACdF,KAAK,CAACW,IAAN,CAAW,4CAAX,EAAyD;AACzEH,gBAAAA,IAAI,EAAEE;AADmE,eAAzD,CADc;;AAAA;AAC1BN,cAAAA,GAD0B;AAIhCF,cAAAA,QAAQ,CAAC;AACPG,gBAAAA,IAAI,EAAEN,KAAK,CAACa,SADL;AAEPL,gBAAAA,OAAO,EAAEG;AAFF,eAAD,CAAR;;AAJgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAV;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;AASP,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAACH,IAAD;AAAA;AAAA,yEAAU,kBAAOR,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACbF,KAAK,CAACc,GAAN,sDAC8BJ,IAAI,CAACK,EADnC,GAEhB;AACEP,gBAAAA,IAAI,EAAEE;AADR,eAFgB,CADa;;AAAA;AACzBN,cAAAA,GADyB;AAQ/BF,cAAAA,QAAQ,CAAC;AACPG,gBAAAA,IAAI,EAAEN,KAAK,CAACiB,QADL;AAEPT,gBAAAA,OAAO,EAAEG;AAFF,eAAD,CAAR;;AAR+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAV;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;AAaP,OAAO,IAAMO,OAAO;AAAA,uEAAG,kBAAOF,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACHf,KAAK,CAACG,GAAN,sDAC8BY,EAD9B,EADG;;AAAA;AACfX,YAAAA,GADe;AAAA,8CAKdA,GAAG,CAACI,IALU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPS,OAAO;AAAA;AAAA;AAAA,GAAb;AAOP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACH,EAAD;AAAA;AAAA,yEAAQ,kBAAOb,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACdF,KAAK,UAAL,sDAC8Be,EAD9B,GAEhB;AACEP,gBAAAA,IAAI,EAAEO;AADR,eAFgB,CADc;;AAAA;AAC1BX,cAAAA,GAD0B;AAOhCe,cAAAA,OAAO,CAACC,GAAR,CAAYhB,GAAZ;AACAF,cAAAA,QAAQ,CAAC;AACPG,gBAAAA,IAAI,EAAEN,KAAK,CAACsB,WADL;AAEPd,gBAAAA,OAAO,EAAEQ;AAFF,eAAD,CAAR;;AARgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAR;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB","sourcesContent":["import * as types from \"../types\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchTodos = () => async (dispatch) => {\r\n  const res = await axios.get(\"https://jsonplaceholder.typicode.com/todos\");\r\n  dispatch({\r\n    type: types.SET_TODOS,\r\n    payload: res.data,\r\n  });\r\n};\r\nexport const postTodo = (todo) => async (dispatch) => {\r\n  const res = await axios.post(\"https://jsonplaceholder.typicode.com/todos\", {\r\n    data: todo,\r\n  });\r\n  dispatch({\r\n    type: types.POST_TODO,\r\n    payload: todo,\r\n  });\r\n};\r\nexport const putTodo = (todo) => async (dispatch) => {\r\n  const res = await axios.put(\r\n    `https://jsonplaceholder.typicode.com/todos/${todo.id}`,\r\n    {\r\n      data: todo,\r\n    }\r\n  );\r\n\r\n  dispatch({\r\n    type: types.PUT_TODO,\r\n    payload: todo,\r\n  });\r\n};\r\nexport const getTask = async (id) => {\r\n  const res = await axios.get(\r\n    `https://jsonplaceholder.typicode.com/todos/${id}`\r\n  );\r\n\r\n  return res.data;\r\n};\r\nexport const deleteTask = (id) => async (dispatch) => {\r\n  const res = await axios.delete(\r\n    `https://jsonplaceholder.typicode.com/todos/${id}`,\r\n    {\r\n      data: id,\r\n    }\r\n  );\r\n  console.log(res)\r\n  dispatch({\r\n    type: types.DELETE_TODO,\r\n    payload: id,\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}