{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as types from \"../types\";\nconst initialState = {\n  todos: [],\n  todo: {},\n  loading: false,\n  error: null\n};\nexport const todoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SET_TODOS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        todos: action.payload,\n        loading: false,\n        error: null\n      });\n\n    case types.POST_TODO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        todos: [...state.todos, action.payload],\n        loading: false,\n        error: null\n      });\n\n    case types.PUT_TODO:\n      {\n        const _todos = [...state.todos];\n\n        const todos = _todos.map(element => {\n          if (element.id == action.payload.id) {\n            return action.payload;\n          }\n\n          return element;\n        });\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          todos,\n          loading: false,\n          error: null\n        });\n      }\n\n    case types.DELETE_TODO:\n      {\n        const _todos = [...state.todos];\n\n        const todos = _todos.filter(element => {\n          return element.id !== action.payload;\n        });\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          todos,\n          loading: false,\n          error: null\n        });\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/harri/Documents/Curso Desarrollo Web/Proyectos/infoCasa/store/reducers/todoReducer.js"],"names":["types","initialState","todos","todo","loading","error","todoReducer","state","action","type","SET_TODOS","payload","POST_TODO","PUT_TODO","_todos","map","element","id","DELETE_TODO","filter"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,UAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,OAAO,EAAE,KAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,KAAK,CAACU,SAAX;AACE,6CACKH,KADL;AAEEL,QAAAA,KAAK,EAAEM,MAAM,CAACG,OAFhB;AAGEP,QAAAA,OAAO,EAAE,KAHX;AAIEC,QAAAA,KAAK,EAAE;AAJT;;AAMF,SAAKL,KAAK,CAACY,SAAX;AACE,6CACKL,KADL;AAEEL,QAAAA,KAAK,EAAE,CAAC,GAAGK,KAAK,CAACL,KAAV,EAAiBM,MAAM,CAACG,OAAxB,CAFT;AAGEP,QAAAA,OAAO,EAAE,KAHX;AAIEC,QAAAA,KAAK,EAAE;AAJT;;AAMF,SAAKL,KAAK,CAACa,QAAX;AACE;AAAC,cAAMC,MAAM,GAAG,CAAC,GAAGP,KAAK,CAACL,KAAV,CAAf;;AACD,cAAMA,KAAK,GAAGY,MAAM,CAACC,GAAP,CAAYC,OAAD,IAAa;AACpC,cAAIA,OAAO,CAACC,EAAR,IAAcT,MAAM,CAACG,OAAP,CAAeM,EAAjC,EAAqC;AACnC,mBAAOT,MAAM,CAACG,OAAd;AACD;;AACD,iBAAOK,OAAP;AACD,SALa,CAAd;;AAMA,+CACKT,KADL;AAEEL,UAAAA,KAFF;AAGEE,UAAAA,OAAO,EAAE,KAHX;AAIEC,UAAAA,KAAK,EAAE;AAJT;AAKG;;AACL,SAAKL,KAAK,CAACkB,WAAX;AACE;AAAC,cAAMJ,MAAM,GAAG,CAAC,GAAGP,KAAK,CAACL,KAAV,CAAf;;AACD,cAAMA,KAAK,GAAGY,MAAM,CAACK,MAAP,CAAeH,OAAD,IAAa;AACvC,iBAAOA,OAAO,CAACC,EAAR,KAAeT,MAAM,CAACG,OAA7B;AACD,SAFa,CAAd;;AAGA,+CACKJ,KADL;AAEEL,UAAAA,KAFF;AAGEE,UAAAA,OAAO,EAAE,KAHX;AAIEC,UAAAA,KAAK,EAAE;AAJT;AAKG;;AAEL;AACE,aAAOE,KAAP;AA1CJ;AA4CD,CA7CM","sourcesContent":["import * as types from \"../types\";\r\n\r\nconst initialState = {\r\n  todos: [],\r\n  todo: {},\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const todoReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.SET_TODOS:\r\n      return {\r\n        ...state,\r\n        todos: action.payload,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case types.POST_TODO:\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos, action.payload],\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case types.PUT_TODO:\r\n      {const _todos = [...state.todos];\r\n      const todos = _todos.map((element) => {\r\n        if (element.id == action.payload.id) {\r\n          return action.payload;\r\n        }\r\n        return element;\r\n      });\r\n      return {\r\n        ...state,\r\n        todos,\r\n        loading: false,\r\n        error: null,\r\n      };}\r\n    case types.DELETE_TODO:\r\n      {const _todos = [...state.todos];\r\n      const todos = _todos.filter((element) => {\r\n        return element.id !== action.payload;\r\n      });\r\n      return {\r\n        ...state,\r\n        todos,\r\n        loading: false,\r\n        error: null,\r\n      };}\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}