{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as types from \"../types\";\nimport axios from \"axios\";\nexport var fetchTodos = function fetchTodos() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"https://jsonplaceholder.typicode.com/todos\");\n\n            case 2:\n              res = _context.sent;\n              dispatch({\n                type: types.SET_TODOS,\n                payload: res.data\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var postTodo = function postTodo(todo) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return axios.post(\"https://jsonplaceholder.typicode.com/todos\", {\n                data: todo\n              });\n\n            case 2:\n              res = _context2.sent;\n              console.log(res);\n              dispatch({\n                type: types.POST_TODO,\n                payload: res.data\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/harri/Documents/Curso Desarrollo Web/Proyectos/infoCasa/store/actions/todoAction.js"],"names":["types","axios","fetchTodos","dispatch","get","res","type","SET_TODOS","payload","data","postTodo","todo","post","console","log","POST_TODO"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,UAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA,wEAAM,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACZF,KAAK,CAACG,GAAN,CAAU,4CAAV,CADY;;AAAA;AACxBC,cAAAA,GADwB;AAE9BF,cAAAA,QAAQ,CAAC;AACPG,gBAAAA,IAAI,EAAEN,KAAK,CAACO,SADL;AAEPC,gBAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,eAAD,CAAR;;AAF8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAOP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD;AAAA;AAAA,yEAAU,kBAAOR,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACdF,KAAK,CAACW,IAAN,CAAW,4CAAX,EAAyD;AACzEH,gBAAAA,IAAI,EAAEE;AADmE,eAAzD,CADc;;AAAA;AAC1BN,cAAAA,GAD0B;AAIhCQ,cAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACAF,cAAAA,QAAQ,CAAC;AACPG,gBAAAA,IAAI,EAAEN,KAAK,CAACe,SADL;AAEPP,gBAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,eAAD,CAAR;;AALgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAV;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB","sourcesContent":["import * as types from \"../types\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchTodos = () => async (dispatch) => {\r\n  const res = await axios.get(\"https://jsonplaceholder.typicode.com/todos\");\r\n  dispatch({\r\n    type: types.SET_TODOS,\r\n    payload: res.data,\r\n  });\r\n};\r\nexport const postTodo = (todo) => async (dispatch) => {\r\n  const res = await axios.post(\"https://jsonplaceholder.typicode.com/todos\", {\r\n    data: todo,\r\n  });\r\n  console.log(res)\r\n  dispatch({\r\n    type: types.POST_TODO,\r\n    payload: res.data,\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}